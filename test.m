 
    clear all;
    close all;
% Задание кооридинат центров оснований каждого бака в мм
    X_array = [852.5;852.5;677.5;677.5;502.5;502.5;-502.5;-502.5;-677.5;-677.5;-852.5;-852.5]; % Вектор x-кооридниат центров оснований баков, мм
    Y_array = [-325;325;-191.7;191.7;-325;325;-325;325;-191.7;191.7;-325;325]; % Вектор y-кооридниат центров оснований баков, мм
    Z_array = [252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7]; % Вектор z-кооридниат центров оснований баков, мм
    
% Переход из м в мм    
    X_array = X_array * 1e-3;
    Y_array = Y_array * 1e-3;
    Z_array = Z_array * 1e-3;
    
% Задание начальных условий
    yaw = 0 * pi/180; % Угол рыскания, рад 
    pitch = -30 * pi/180; % Угол тангажа, рад 
    roll = 0 * pi/180; % Угол крена, рад
    V_ini = 15; % Начальный объем жидкости, л
    v_c = 0.2; % Расход жидкости, л/с
    
    t = 0; % Рассматриваемый период времени, с

        for n = 1:12
            x_ini = X_array(n,:); % Получение x-координаты каждого бака из вектора, м
            y_ini = Y_array(n,:); % Получение y-координаты каждого бака из вектора, м
            z_ini = Z_array(n,:); % Получение z-координаты каждого бака из вектораб м
            V_t = V_ini - t * v_c; % Текущий объем жидкости, л
    
    if V_t > 0 % Проверка наличия жидкости в баке
        
    % Нахождение текущей массы жидкости 
        rho = 1; % Плотность для воды, кг/л 
        m_l = V_t * rho; % Масса воды, кг

    % Нахождение заполненности бака 
        V_max = 180 / 12; % Объем бака, л 
        n = V_t / V_max; % Доля жидкости в баке 

    % Нахождение переменного радиуса 
        R_max = 0.1; % Максимальный радиус основания бака 
        R_dif = 0.06; % Разница между максимальным и минимальным радиусом 
        R_t = R_max - R_dif * (1 - n); % Переменный радиус основания, м 

    % Нахождение уровня воды в статическом положении 
        %H = V_t / (pi * (R_t) ^ 2) * 1e-3; % Текущий уровень воды, м 
        V_sp = (2 / 3) * pi * (R_max) ^ 3;
        V_cyl = V_t * 1e-3 - V_sp;
        if V_cyl < 0 
            H = (3 * V_t * 1e-3) / (2 * pi * (R_max) ^ 2); 
        else
            H = V_cyl / (pi * (R_max) ^ 2) + R_max;
        end
    % Нахождение угла наклона 
        rotM = eul2rotm([yaw,pitch,roll]); % Создание матрицы поворота 
        zV = [0;0;1]; % Единичный вектор 
        Vec = rotM * zV; % Повернутый вектор 
        alpha = acos(rotM(3,3)); % Угол между единичным вектором и новым вектором, рад
        phi = acos(rotM(1,1)); %Угол между единичным вектором и новым вектором

    % Нахождение оснований трапеции 
        h_2 = R_t * tan(alpha); % Основание треугольника, м 
        h_1 = H - h_2 / 2; % Меньшее основание трапеции, м 
        L = h_1 + h_2; % Большее основание трапеции, м
        if L >= H
            L = H;
            h_2 = 0;
        end
        beta = atan(h_2 / (4 * R_t)); % Угол между прямой, которая соединяет середины оснований трапеции, и средней линией трапеции в статическом состоянии, рад 

    % Нахождение координат ЦМ 
        X_c = (2 / 3) * R_t * (2 * h_2 + 3 * h_1) / (2 * h_1 + h_2); % x-координата в наибольшей плоскости (расстояние от наименьшего основания до ЦМ), м 
        z_new = z_ini - X_c * tan(beta) - (H); % z-координата ЦМ, м 
        x_sign = sign(pitch); % Определение знака угла для дальнейшего расчета x-координаты 
        y_sign = sign(roll); % Определение знака угла для дальнейшего расчета y-координаты 
        x_c = - x_sign * (X_c * sin(phi));
        y_c = y_sign * (X_c * cos(phi));
        x_new = x_ini - x_sign * (X_c * sin(phi)); % x-координата ЦМ, м 
        y_new = y_ini + y_sign * (X_c * cos(phi)); % x-координата ЦМ, м 

        else % При отсуствии жидкости в баках объем и масса равны 0, а ЦМ расположен в центре бака
            x_new = x_ini;
            y_new = y_ini;
            z_new = z_ini;
            V_t = 0;
            m_l = 0;
        end
            CM_vector = [x_new y_new z_new V_t m_l x_new*m_l y_new*m_l z_new*m_l]; % Занесение полученных данных в одну строку
            CM_array(n,:) = CM_vector; % Запись данных в общую матрицу
        end

        % Нахождение общего ЦМ для всех баков
        m_all = sum(CM_array(:,5)); % Текущая масса жидкости в баках, кг
        if m_all > 0 % Проверка наличия топлива в баках
            X_CM = sum(CM_array(:,6)) / sum(CM_array(:,5)); % x-координата общего ЦМ, м
            Y_CM = sum(CM_array(:,7)) / sum(CM_array(:,5)); % y-координата общего ЦМ, м
            Z_CM = sum(CM_array(:,8)) / sum(CM_array(:,5)); % z-координата общего ЦМ, м
            R_CM = sqrt(X_CM ^ 2 + Y_CM ^ 2 + Z_CM ^ 2); % Длина радиус-вектора от ЦМ аппарата до ЦМ баков, м
            CM_position = [X_CM Y_CM Z_CM]; % координаты ЦМ, м
            
        else
            X_CM = sum(CM_array(:,1)) / 12; % x-координата общего ЦМ, м
            Y_CM = sum(CM_array(:,2)) / 12; % y-координата общего ЦМ, м
            Z_CM = sum(CM_array(:,3)) / 12; % z-координата общего ЦМ, м
            
            %X_CM = 0; % x-координата общего ЦМ, м
            %Y_CM = 0; % y-координата общего ЦМ, м
            %Z_CM = 0; % z-координата общего ЦМ, м
            
            R_CM = sqrt(X_CM ^ 2 + Y_CM ^ 2 + Z_CM ^ 2); % Длина радиус-вектора от ЦМ аппарата до ЦМ баков, м
            CM_position = [X_CM Y_CM Z_CM]; % координаты ЦМ, м
        end

 
