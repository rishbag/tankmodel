 
    clear all;
    close all;
% Задание кооридинат центров оснований каждого бака в мм
    X_array = [852.5;852.5;677.5;677.5;502.5;502.5;-502.5;-502.5;-677.5;-677.5;-852.5;-852.5]; % Вектор x-кооридниат центров оснований баков, мм
    Y_array = [-325;325;-191.7;191.7;-325;325;-325;325;-191.7;191.7;-325;325]; % Вектор y-кооридниат центров оснований баков, мм
    Z_array = [252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7;252.7]; % Вектор z-кооридниат центров оснований баков, мм
    
% Переход из м в мм    
    X_array = X_array * 1e-3;
    Y_array = Y_array * 1e-3;
    Z_array = Z_array * 1e-3;
    
% Задание начальных условий
    yaw = 0 * pi/180; % Угол рыскания, рад 
    pitch = 30 * pi/180; % Угол тангажа, рад 
    roll = 30 * pi/180; % Угол крена, рад
    V_ini = 15; % Начальный объем жидкости, л
    v_c = 0.2; % Расход жидкости, л/с
    a_x = 0; % Ускорение по оси x, м/с^2
    a_y = 0;
    t = 0; % Рассматриваемый период времени, с

        for n = 1:12
            x_ini = X_array(n,:); % Получение x-координаты каждого бака из вектора, м
            y_ini = Y_array(n,:); % Получение y-координаты каждого бака из вектора, м
            z_ini = Z_array(n,:); % Получение z-координаты каждого бака из вектораб м
            V_t = V_ini - t * v_c; % Текущий объем жидкости, л
    
       V_t = V_ini - t * v_c; % Текущий объем жидкости, л
    
    if V_t > 0 % Проверка наличия жидкости в баке
        
    % Нахождение текущей массы жидкости 
        rho = 1; % Плотность для воды, кг/л 
        m_l = V_t * rho; % Масса воды, кг

    % Нахождение заполненности бака 
        V_max = 180 / 12; % Объем бака, л 
        f = V_t / V_max; % Доля жидкости в баке 

    % Нахождение переменного радиуса 
        R_max = 0.1; % Максимальный радиус основания бака 
        R_dif = 0.06; % Разница между максимальным и минимальным радиусом 
        R_t = R_max - R_dif * (1 - f); % Переменный радиус основания, м 
        
    % Нахождение уровня воды в статическом положении 
        V_sp = (2 / 3) * pi * (R_max) ^ 3;
        V_cyl = V_t * 1e-3 - V_sp;
        if V_cyl <= 0 
            H = (3 * V_t * 1e-3) / (2 * pi * (R_max) ^ 2); 
        else
            H = V_cyl / (pi * (R_max) ^ 2) + R_max;
        end
    % Нахождение угла наклона 
        g = 9.81; % Ускорение свободного падения, м/с^2
        F_t = m_l * g; % сила тяжести
        a = sqrt(a_x^2 + a_y^2); % общее ускорение, м/с^2
        F = m_l * a; % внешная сила, Н
        theta = atan(F / F_t); % угол наклона, который зависит от ускорения, рад
        rotM = eul2rotm([yaw,pitch,roll]); % Создание матрицы поворота 
        alpha = acos(rotM(3,3)); % Угол между единичным вектором и новым вектором вертикальной плоскости, рад

    % Нахождение ЦМ через ускорения
        if a <= 0
            [X_a,z_a] = trapezium (R_t,H,theta);
            x_a = 0;
            y_a = 0; 
        else
            [X_a,z_a] = trapezium (R_t,H,theta);
            x_a = - sign(a_x) * X_a * a_x / a;
            y_a = - sign(a_y) * X_a * a_y / a;
        end
        
    % Нахождение ЦМ через углы наклона
        [X_cm,z_cm] = trapezium (R_t,H,alpha);
        x_sign = sign(pitch); % Определение знака угла для дальнейшего расчета x-координаты 
        x_cm = x_sign * ((X_cm)* cos(roll) * sin(pitch)); % x-координата ЦМ, м 
        y_cm = (X_cm) * cos(pitch) * sin(roll); % y-координата ЦМ, м
        
    % Нахождение общего ЦМ
        z_c = z_ini - 0.5 * (z_a + z_cm);
        x_c = x_ini + 0.5 * (x_a + x_cm); % x-координата ЦМ, м 
        y_c = y_ini + 0.5 * (y_a + y_cm); % y-координата ЦМ, м 
        m_x = x_c * m_l; % Момент m_x относительно центра бака;
        m_y = y_c * m_l; % Момент m_y относительно центра бака;
        
    else % При отсуствии жидкости в баках объем и масса равны 0, а ЦМ расположен в центре бака
        x_c = x_ini;
        y_c = y_ini;
        z_c = z_ini;
        V_t = 0;
        m_l = 0;
        m_x = 0;
        m_y = 0;
    end
    CM_vector = [x_c y_c z_c V_t m_l x_c*m_l y_c*m_l z_c*m_l m_x m_y]; % Занесение полученных данных в одну строку
            CM_array(n,:) = CM_vector; % Запись данных в общую матрицу
        end

        % Нахождение общего ЦМ для всех баков
        m_all = sum(CM_array(:,5)); % Текущая масса жидкости в баках, кг
        a = (sum(CM_array(:,6)));
        b = (sum(CM_array(:,7)));
        c = (sum(CM_array(:,8)));
        
        if m_all > 0 % Проверка наличия топлива в баках
            X_CM = (sum(CM_array(:,6))) / m_all; % x-координата общего ЦМ, м
            Y_CM = (sum(CM_array(:,7))) / m_all; % y-координата общего ЦМ, м
            Z_CM = (sum(CM_array(:,8))) / m_all; % z-координата общего ЦМ, м
            %R_CM = sqrt(X_CM ^ 2 + Y_CM ^ 2 + Z_CM ^ 2); % Длина радиус-вектора от ЦМ аппарата до ЦМ баков, м
            R_CM = sqrt(X_CM ^ 2 + Y_CM ^ 2 );
            CM_position = [X_CM Y_CM Z_CM]; % координаты ЦМ, м
            
        else
            X_CM = sum(CM_array(:,1)) / 12; % x-координата общего ЦМ, м
            Y_CM = sum(CM_array(:,2)) / 12; % y-координата общего ЦМ, м
            Z_CM = sum(CM_array(:,3)) / 12; % z-координата общего ЦМ, м
            
            %X_CM = 0; % x-координата общего ЦМ, м
            %Y_CM = 0; % y-координата общего ЦМ, м
            %Z_CM = 0; % z-координата общего ЦМ, м
            
            %R_CM = sqrt(X_CM ^ 2 + Y_CM ^ 2 + Z_CM ^ 2); % Длина радиус-вектора от ЦМ аппарата до ЦМ баков, м
            R_CM = sqrt(X_CM ^ 2 + Y_CM ^ 2 );
            CM_position = [X_CM Y_CM Z_CM]; % координаты ЦМ, м
        end

        % Нахождение момента силы
            g = 9.81; % Ускорение свободного падения, м/с^2 
            M = m_all * g * R_CM; % Момент силы, Н*м
            M_x = abs(m_all * g * X_CM);
            M_y = abs(m_all * g * Y_CM);
            M_z = abs(m_all * g * Z_CM);
            T_X = sum(abs(CM_array(:,9)));
            T_Y = sum(abs(CM_array(:,10)));
            
        % Запись данных массив для каждого промежутка времени
            Gl_vector = [t X_CM Y_CM Z_CM M m_all M_x M_y M_z R_CM T_X T_Y];
